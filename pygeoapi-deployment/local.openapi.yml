# Copyright 2025 Lincoln Institute of Land Policy
# SPDX-License-Identifier: Apache-2.0

components:
  parameters:
    bbox:
      description:
        Only features that have a geometry that intersects the bounding
        box are selected.The bounding box is provided as four or six numbers, depending
        on whether the coordinate reference system includes a vertical axis (height
        or depth).
      explode: false
      in: query
      name: bbox
      required: false
      schema:
        items:
          type: number
        maxItems: 6
        minItems: 4
        type: array
      style: form
    bbox-crs:
      description: Indicates the coordinate reference system for the given bbox coordinates.
      explode: false
      in: query
      name: bbox-crs
      required: false
      schema:
        format: uri
        type: string
      style: form
    bbox-crs-epsg:
      description: Indicates the EPSG for the given bbox coordinates.
      explode: false
      in: query
      name: bbox-crs
      required: false
      schema:
        default: 4326
        type: integer
      style: form
    crs:
      description: Indicates the coordinate reference system for the results.
      explode: false
      in: query
      name: crs
      required: false
      schema:
        format: uri
        type: string
      style: form
    f:
      description:
        The optional f parameter indicates the output format which the
        server shall provide as part of the response document.  The default format
        is GeoJSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: json
        enum:
          - json
          - html
          - jsonld
        type: string
      style: form
    lang:
      description:
        The optional lang parameter instructs the server return a response
        in a certain language, if supported.  If the language is not among the available
        values, the Accept-Language header language will be used if it is supported.
        If the header is missing, the default server language is used. Note that providers
        may only support a single language (or often no language at all), that can
        be different from the server language.  Language strings can be written in
        a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de")
        or locale-like (e.g. "de-CH" or "fr_BE") fashion.
      in: query
      name: lang
      required: false
      schema:
        default: en-US
        enum:
          - en-US
        type: string
    offset:
      description:
        The optional offset parameter indicates the index within the result
        set from which the server shall begin presenting results in the response document.  The
        first element has an index of 0 (default).
      explode: false
      in: query
      name: offset
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    resourceId:
      description: Configuration resource identifier
      in: path
      name: resourceId
      required: true
      schema:
        default: lakes
        type: string
    skipGeometry:
      description: This option can be used to skip response geometries for each feature.
      explode: false
      in: query
      name: skipGeometry
      required: false
      schema:
        default: false
        type: boolean
      style: form
    vendorSpecificParameters:
      description: Additional "free-form" parameters that are not explicitly defined
      in: query
      name: vendorSpecificParameters
      schema:
        additionalProperties: true
        type: object
      style: form
  responses:
    "200":
      description: successful operation
    "204":
      description: no content
    Queryables:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/queryables"
      description: successful queryables operation
    Tiles:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tiles"
      description: Retrieves the tiles description for this collection
    default:
      content:
        application/json:
          schema:
            $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml
      description: Unexpected error
  schemas:
    queryable:
      properties:
        description:
          description: a human-readable narrative describing the queryable
          type: string
        language:
          default:
            - en
          description: the language used for the title and description
          type: string
        queryable:
          description: the token that may be used in a CQL predicate
          type: string
        title:
          description: a human readable title for the queryable
          type: string
        type:
          description: the data type of the queryable
          type: string
        type-ref:
          description: a reference to the formal definition of the type
          format: url
          type: string
      required:
        - queryable
        - type
      type: object
    queryables:
      properties:
        queryables:
          items:
            $ref: "#/components/schemas/queryable"
          type: array
      required:
        - queryables
      type: object
    tilematrixsetlink:
      properties:
        tileMatrixSet:
          type: string
        tileMatrixSetURI:
          type: string
      required:
        - tileMatrixSet
      type: object
    tiles:
      properties:
        links:
          items:
            $ref: https://schemas.opengis.net/ogcapi/tiles/part1/1.0/openapi/ogcapi-tiles-1.yaml#/components/schemas/link
          type: array
        tileMatrixSetLinks:
          items:
            $ref: "#/components/schemas/tilematrixsetlink"
          type: array
      required:
        - tileMatrixSetLinks
        - links
      type: object
info:
  contact:
    name: Internet of Water
    url: https://github.com/internetofwater/WWDH
    x-ogc-serviceContact:
      addresses:
        - administrativeArea: USA
          city: Cambridge
          deliveryPoint:
            - 113 Brattle St
      emails:
        - value: bwebb@lincolninst.edu
      hoursOfService: pointOfContact
      links:
        - href: https://cgsearth.org
          type: text/html
      name: Benjamin Webb
  description:
    The Western Water Datahub is an implementation of OGC API - EDR supported
    by the United States Bureau of Reclamation.
  license:
    name: MIT License
    url: https://opensource.org/license/MIT
  termsOfService: https://opensource.org/license/MIT
  title: Western Water Datahub
  version: 0.21.dev0
  x-keywords:
    - usbr
    - wwdh
    - iow
openapi: 3.0.2
paths:
  /:
    get:
      description: Landing page
      operationId: getLandingPage
      parameters:
        - $ref: "#/components/parameters/f"
        - $ref: "#/components/parameters/lang"
      responses:
        "200":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        "400":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        "500":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Landing page
      tags:
        - server
  /collections:
    get:
      description: Collections
      operationId: getCollections
      parameters:
        - $ref: "#/components/parameters/f"
        - $ref: "#/components/parameters/lang"
      responses:
        "200":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        "400":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        "500":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Collections
      tags:
        - server
  /collections/lakes:
    get:
      description: lakes of the world, public domain
      operationId: describeLakesCollection
      parameters:
        - $ref: "#/components/parameters/f"
        - $ref: "#/components/parameters/lang"
      responses:
        "200":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        "400":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        "404":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        "500":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes metadata
      tags:
        - lakes
  /collections/lakes/items:
    get:
      description: lakes of the world, public domain
      operationId: getLakesFeatures
      parameters:
        - $ref: "#/components/parameters/f"
        - $ref: "#/components/parameters/lang"
        - $ref: "#/components/parameters/bbox"
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
        - $ref: "#/components/parameters/crs"
        - $ref: "#/components/parameters/bbox-crs"
        - description:
            The properties that should be included for each feature. The
            parameter value is a comma-separated list of property names.
          explode: false
          in: query
          name: properties
          required: false
          schema:
            items:
              enum: []
              type: string
            type: array
          style: form
        - $ref: "#/components/parameters/vendorSpecificParameters"
        - $ref: "#/components/parameters/skipGeometry"
        - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        "400":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        "404":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        "500":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes items
      tags:
        - lakes
    options:
      description: lakes of the world, public domain
      operationId: optionsLakesFeatures
      responses:
        "200":
          description: options response
      summary: Options for Large Lakes items
      tags:
        - lakes
  /collections/lakes/items/{featureId}:
    get:
      description: lakes of the world, public domain
      operationId: getLakesFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
        - $ref: "#/components/parameters/crs"
        - $ref: "#/components/parameters/f"
        - $ref: "#/components/parameters/lang"
      responses:
        "200":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        "400":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        "404":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        "500":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes item by id
      tags:
        - lakes
    options:
      description: lakes of the world, public domain
      operationId: optionsLakesFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      responses:
        "200":
          description: options response
      summary: Options for Large Lakes item by id
      tags:
        - lakes
  /conformance:
    get:
      description: API conformance definition
      operationId: getConformanceDeclaration
      parameters:
        - $ref: "#/components/parameters/f"
        - $ref: "#/components/parameters/lang"
      responses:
        "200":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        "400":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        "500":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: API conformance definition
      tags:
        - server
  /jobs:
    get:
      description: Retrieve a list of jobs
      operationId: getJobs
      responses:
        "200":
          $ref: "#/components/responses/200"
        "404":
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: "#/components/responses/default"
      summary: Retrieve jobs list
      tags:
        - jobs
  /jobs/{jobId}:
    delete:
      description: Cancel / delete job
      operationId: deleteJob
      parameters:
        - &id001
          description: job identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        "204":
          $ref: "#/components/responses/204"
        "404":
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: "#/components/responses/default"
      summary: Cancel / delete job
      tags:
        - jobs
    get:
      description: Retrieve job details
      operationId: getJob
      parameters:
        - *id001
        - $ref: "#/components/parameters/f"
      responses:
        "200":
          $ref: "#/components/responses/200"
        "404":
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: "#/components/responses/default"
      summary: Retrieve job details
      tags:
        - jobs
  /jobs/{jobId}/results:
    get:
      description: Retrieve job results
      operationId: getJobResults
      parameters:
        - *id001
        - $ref: "#/components/parameters/f"
      responses:
        "200":
          $ref: "#/components/responses/200"
        "404":
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: "#/components/responses/default"
      summary: Retrieve job results
      tags:
        - jobs
  /openapi:
    get:
      description: This document
      operationId: getOpenapi
      parameters:
        - $ref: "#/components/parameters/f"
        - $ref: "#/components/parameters/lang"
        - description: UI to render the OpenAPI document
          explode: false
          in: query
          name: ui
          required: false
          schema:
            default: swagger
            enum:
              - swagger
              - redoc
            type: string
          style: form
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        default:
          $ref: "#/components/responses/default"
      summary: This document
      tags:
        - server
servers:
  - description:
      The Western Water Datahub is an implementation of OGC API - EDR supported
      by the United States Bureau of Reclamation.
    url: http://localhost:5005
tags:
  - description:
      The Western Water Datahub is an implementation of OGC API - EDR supported
      by the United States Bureau of Reclamation.
    externalDocs:
      description: information
      url: https://github.com/internetofwater/WWDH
    name: server
  - description: lakes of the world, public domain
    name: lakes
  - name: coverages
  - name: edr
  - name: records
  - name: features
  - name: maps
  - name: processes
  - name: jobs
  - name: tiles
  - name: stac
